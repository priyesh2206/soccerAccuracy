{"ast":null,"code":"import React from 'react';\nimport Proton from 'proton-engine';\nimport RAFManager from 'raf-manager';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar MouseParticles = function (_React$Component) {\n  inherits(MouseParticles, _React$Component);\n\n  function MouseParticles(props) {\n    classCallCheck(this, MouseParticles);\n\n    var _this = possibleConstructorReturn(this, (MouseParticles.__proto__ || Object.getPrototypeOf(MouseParticles)).call(this, props));\n\n    _this.ease = 0.7;\n    _this.level = 0;\n    _this.LEVEL = 5;\n    _this._allowEmitting = true;\n    _this.renderProton = _this.renderProton.bind(_this);\n    _this.mouseMoveHandler = _this.mouseMoveHandler.bind(_this);\n    _this.mouseDownHandler = _this.mouseDownHandler.bind(_this);\n    _this.mouseUpHandler = _this.mouseUpHandler.bind(_this);\n\n    _this.createContainerDom();\n\n    return _this;\n  }\n\n  createClass(MouseParticles, [{\n    key: \"createContainerDom\",\n    value: function createContainerDom() {\n      this.dom = document.createElement(\"div\");\n      this.dom.style.position = \"fixed\";\n      this.dom.style.left = \"0px\";\n      this.dom.style.top = \"0px\";\n      this.dom.style.zIndex = 9999;\n      this.dom.pointerEvents = \"none\";\n      this.dom.id = \"rmps_\" + (Math.random() * 999999 >> 0);\n      document.body.appendChild(this.dom);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      try {\n        document.body.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\n        document.body.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\n        document.body.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\n        RAFManager.remove(this.renderProton);\n        this.proton.destroy();\n      } catch (e) {}\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onCanvasInited();\n      this.addMouseEventListener();\n      this.setCullList();\n    }\n  }, {\n    key: \"onCanvasInited\",\n    value: function onCanvasInited() {\n      this.createProton();\n      RAFManager.add(this.renderProton);\n    }\n  }, {\n    key: \"addMouseEventListener\",\n    value: function addMouseEventListener() {\n      document.body.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\n      document.body.addEventListener(\"mousedown\", this.mouseDownHandler, false);\n      document.body.addEventListener(\"mouseup\", this.mouseUpHandler, false);\n    }\n  }, {\n    key: \"mouseDownHandler\",\n    value: function mouseDownHandler(e) {}\n  }, {\n    key: \"mouseUpHandler\",\n    value: function mouseUpHandler(e) {}\n  }, {\n    key: \"mouseMoveHandler\",\n    value: function mouseMoveHandler(e) {\n      if (this.isCullDom(e)) return;\n      var x = void 0,\n          y = 0;\n      x = e.clientX;\n      y = e.clientY;\n      this.emitter.p.x += (x - this.emitter.p.x) * this.ease;\n      this.emitter.p.y += (y - this.emitter.p.y) * this.ease;\n      if (this._allowEmitting) this.emitter.emit(\"once\");\n    }\n  }, {\n    key: \"setCullList\",\n    value: function setCullList() {\n      this.cullClassList = this.props.cull || \"\";\n      this.cullClassList = this.cullClassList.split(\",\");\n      this.LEVEL = this.props.level || 6;\n    }\n  }, {\n    key: \"isCullDom\",\n    value: function isCullDom(e) {\n      this.level = 0;\n      if (isInputText(e.target)) return true;\n      if (isTextBox(e.target)) return true;\n      if (!this.cullClassList || !this.cullClassList.length) return false;\n      return this.isContain(e.target, this.cullClassList);\n    }\n  }, {\n    key: \"isContain\",\n    value: function isContain(element, cullClassList) {\n      if (this.level >= this.LEVEL) return false;\n      if (!element) return false;\n      if (!element.classList) return false;\n      if (element === document.body) return false;\n\n      for (var i = 0; i < cullClassList.length; i++) {\n        if (element.classList.contains(cullClassList[i])) {\n          return true;\n        }\n      }\n\n      this.level++;\n      return this.isContain(element.parentNode, cullClassList);\n    }\n  }, {\n    key: \"createProton\",\n    value: function createProton(canvas) {\n      this.proton = new Proton();\n      var emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.props.num || 3);\n      emitter.damping = 0.008;\n      var life = this.props.life ? new Proton.Life(this.props.life) : new Proton.Life(0.2, 0.5);\n      var color = this.props.color || \"random\";\n      var g = this.props.g;\n      var v = this.props.v || 0.65;\n      var alpha = this.props.alpha || Proton.getSpan(0.25, 0.55);\n      var tha = this.props.tha ? new Proton.Span(this.props.tha[0], this.props.tha[1]) : new Proton.Span(0, 360);\n      var radius = new Proton.Radius(2, 5);\n\n      if (this.props.radius) {\n        var r = this.props.radius;\n        radius = new Proton.Radius(r * 0.8, r);\n      }\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(radius);\n      emitter.addInitialize(life);\n      emitter.addInitialize(new Proton.Velocity(new Proton.Span(v), tha, \"polar\"));\n      emitter.addBehaviour(new Proton.Alpha(alpha));\n      emitter.addBehaviour(new Proton.Color(color));\n      emitter.addBehaviour(new Proton.Scale(1, 0.1));\n      emitter.addBehaviour(new Proton.RandomDrift(10, 10, 0.2));\n\n      if (g) {\n        emitter.addBehaviour(new Proton.G(parseFloat(g)));\n      }\n\n      this.proton.addEmitter(emitter);\n      var renderer = new Proton.DomRenderer(this.dom);\n      this.proton.addRenderer(renderer);\n      this.emitter = emitter;\n    }\n  }, {\n    key: \"renderProton\",\n    value: function renderProton() {\n      this.proton && this.proton.update();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null);\n    }\n  }]);\n  return MouseParticles;\n}(React.Component); // utils function\n\n\nfunction isInputText(element) {\n  return element instanceof HTMLInputElement && element.type === \"text\";\n}\n\nfunction isTextBox(element) {\n  var tagName = element.tagName.toLowerCase();\n  if (tagName === \"textarea\") return true;\n  if (tagName === \"input\") return true;\n  return false;\n}\n\nexport default MouseParticles;","map":{"version":3,"sources":["../src/index.js"],"names":["MouseParticles","React","Component","document","Math","e","x","y","isInputText","isTextBox","element","cullClassList","i","canvas","emitter","Proton","life","color","g","v","alpha","tha","radius","r","parseFloat","renderer","tagName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIMA,cAAAA,GAAAA,UAAAA,gBAAAA,EAAAA;;;0BACJ,K,EAAmB;;;+HAAA,K;;UAGjB,I,GAAA,G;UACA,K,GAAA,C;UACA,K,GAAA,C;UACA,c,GAAA,I;UACA,Y,GAAoB,KAAA,CAAA,YAAA,CAAA,IAAA,CAApB,KAAoB,C;UACpB,gB,GAAwB,KAAA,CAAA,gBAAA,CAAA,IAAA,CAAxB,KAAwB,C;UACxB,gB,GAAwB,KAAA,CAAA,gBAAA,CAAA,IAAA,CAAxB,KAAwB,C;UACxB,c,GAAsB,KAAA,CAAA,cAAA,CAAA,IAAA,CAAtB,KAAsB,C;;UAEtB,kB;;;;;;;yCAGmB;WACnB,G,GAAWG,QAAAA,CAAAA,aAAAA,CAAX,KAAWA,C;WACX,G,CAAA,K,CAAA,Q,GAAA,O;WACA,G,CAAA,K,CAAA,I,GAAA,K;WACA,G,CAAA,K,CAAA,G,GAAA,K;WACA,G,CAAA,K,CAAA,M,GAAA,I;WACA,G,CAAA,a,GAAA,M;WACA,G,CAAA,E,GAAA,WAAuBC,IAAAA,CAAAA,MAAAA,KAAD,MAACA,IAAvB,CAAA,C;eACA,I,CAAA,W,CAA0B,KAA1B,G;;;;2CAGqB;UACjB;iBACF,I,CAAA,mB,CAAA,W,EAA+C,KAA/C,gB,EAAA,K;iBACA,I,CAAA,mB,CAAA,W,EAA+C,KAA/C,gB,EAAA,K;iBACA,I,CAAA,mB,CAAA,S,EAA6C,KAA7C,c,EAAA,K;mBACA,M,CAAkB,KAAlB,Y;aACA,M,CAAA,O;AALF,O,CAME,OAAA,CAAA,EAAU,CAAA;;;;wCAGM;WAClB,c;WACA,qB;WACA,W;;;;qCAGe;WACf,Y;iBACA,G,CAAe,KAAf,Y;;;;4CAGsB;eACtB,I,CAAA,gB,CAAA,W,EAA4C,KAA5C,gB,EAAA,K;eACA,I,CAAA,gB,CAAA,W,EAA4C,KAA5C,gB,EAAA,K;eACA,I,CAAA,gB,CAAA,S,EAA0C,KAA1C,c,EAAA,K;;;;qCAGeC,C,EAAG,CAAA;;;mCACLA,C,EAAG,CAAA;;;qCAEDA,C,EAAG;UACd,KAAA,SAAA,CAAJ,CAAI,C,EAAmB;UACnBC,CAAAA,GAAAA,KAAJ,C;UACEC,CAAAA,GADF,C;UAGIF,CAAAA,CAAJ,O;UACIA,CAAAA,CAAJ,O;WAEA,O,CAAA,C,CAAA,C,IAAoB,CAACC,CAAAA,GAAI,KAAA,OAAA,CAAA,CAAA,CAAL,CAAA,IAAyB,KAA7C,I;WACA,O,CAAA,C,CAAA,C,IAAoB,CAACC,CAAAA,GAAI,KAAA,OAAA,CAAA,CAAA,CAAL,CAAA,IAAyB,KAA7C,I;UAEI,KAAJ,c,EAAyB,KAAA,OAAA,CAAA,IAAA,CAAA,MAAA;;;;kCAGb;WACZ,a,GAAqB,KAAA,KAAA,CAAA,IAAA,IAArB,E;WACA,a,GAAqB,KAAA,aAAA,CAAA,KAAA,CAArB,GAAqB,C;WAErB,K,GAAa,KAAA,KAAA,CAAA,KAAA,IAAb,C;;;;8BAGQF,C,EAAG;WACX,K,GAAA,C;UAEIG,WAAAA,CAAYH,CAAAA,CAAhB,MAAIG,C,EAAuB,OAAA,IAAA;UACvBC,SAAAA,CAAUJ,CAAAA,CAAd,MAAII,C,EAAqB,OAAA,IAAA;UACrB,CAAC,KAAD,aAAA,IAAuB,CAAC,KAAA,aAAA,CAA5B,M,EAAuD,OAAA,KAAA;aAEhD,KAAA,SAAA,CAAeJ,CAAAA,CAAf,MAAA,EAAyB,KAAhC,aAAO,C;;;;8BAGCK,O,EAASC,a,EAAe;UAC5B,KAAA,KAAA,IAAc,KAAlB,K,EAA8B,OAAA,KAAA;UAC1B,CAAJ,O,EAAc,OAAA,KAAA;UACV,CAACD,OAAAA,CAAL,S,EAAwB,OAAA,KAAA;UACpBA,OAAAA,KAAYP,QAAAA,CAAhB,I,EAA+B,OAAA,KAAA;;WAE1B,IAAIS,CAAAA,GAAT,C,EAAgBA,CAAAA,GAAID,aAAAA,CAApB,M,EAA0CC,CAA1C,E,EAA+C;YACzCF,OAAAA,CAAAA,SAAAA,CAAAA,QAAAA,CAA2BC,aAAAA,CAA/B,CAA+BA,CAA3BD,C,EAA8C;iBAChD,I;;;;WAGJ,K;aAEO,KAAA,SAAA,CAAeA,OAAAA,CAAf,UAAA,EAAP,aAAO,C;;;;iCAGIG,M,EAAQ;WACnB,M,GAAc,IAAd,MAAc,E;UAERC,OAAAA,GAAU,IAAIC,MAAAA,CAApB,OAAgB,E;cAChB,I,GAAe,IAAIA,MAAAA,CAAJ,IAAA,CAAgB,KAAA,KAAA,CAAA,GAAA,IAA/B,CAAe,C;cACf,O,GAAA,K;UAEMC,IAAAA,GAAO,KAAA,KAAA,CAAA,IAAA,GAAkB,IAAID,MAAAA,CAAJ,IAAA,CAAgB,KAAA,KAAA,CAAlC,IAAkB,CAAlB,GAAqD,IAAIA,MAAAA,CAAJ,IAAA,CAAA,GAAA,EAAlE,GAAkE,C;UAC5DE,KAAAA,GAAQ,KAAA,KAAA,CAAA,KAAA,IAAd,Q;UACMC,CAAAA,GAAI,KAAA,KAAA,CAAV,C;UACMC,CAAAA,GAAI,KAAA,KAAA,CAAA,CAAA,IAAV,I;UACMC,KAAAA,GAAQ,KAAA,KAAA,CAAA,KAAA,IAAoBL,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,EAAlC,IAAkCA,C;UAC5BM,GAAAA,GAAM,KAAA,KAAA,CAAA,GAAA,GAAiB,IAAIN,MAAAA,CAAJ,IAAA,CAAgB,KAAA,KAAA,CAAA,GAAA,CAAhB,CAAgB,CAAhB,EAAmC,KAAA,KAAA,CAAA,GAAA,CAApD,CAAoD,CAAnC,CAAjB,GAAyE,IAAIA,MAAAA,CAAJ,IAAA,CAAA,CAAA,EAArF,GAAqF,C;UACjFO,MAAAA,GAAS,IAAIP,MAAAA,CAAJ,MAAA,CAAA,CAAA,EAAb,CAAa,C;;UACT,KAAA,KAAA,CAAJ,M,EAAuB;YACfQ,CAAAA,GAAI,KAAA,KAAA,CAAV,M;iBACS,IAAIR,MAAAA,CAAJ,MAAA,CAAkBQ,CAAAA,GAAlB,GAAA,EAAT,CAAS,C;;;cAGX,a,CAAsB,IAAIR,MAAAA,CAAJ,IAAA,CAAtB,CAAsB,C;cACtB,a,CAAA,M;cACA,a,CAAA,I;cACA,a,CAAsB,IAAIA,MAAAA,CAAJ,QAAA,CAAoB,IAAIA,MAAAA,CAAJ,IAAA,CAApB,CAAoB,CAApB,EAAA,GAAA,EAAtB,OAAsB,C;cAEtB,Y,CAAqB,IAAIA,MAAAA,CAAJ,KAAA,CAArB,KAAqB,C;cACrB,Y,CAAqB,IAAIA,MAAAA,CAAJ,KAAA,CAArB,KAAqB,C;cACrB,Y,CAAqB,IAAIA,MAAAA,CAAJ,KAAA,CAAA,CAAA,EAArB,GAAqB,C;cACrB,Y,CAAqB,IAAIA,MAAAA,CAAJ,WAAA,CAAA,EAAA,EAAA,EAAA,EAArB,GAAqB,C;;UACrB,C,EAAO;gBACL,Y,CAAqB,IAAIA,MAAAA,CAAJ,CAAA,CAAaS,UAAAA,CAAlC,CAAkCA,CAAb,C;;;WAGvB,M,CAAA,U,CAAA,O;UACMC,QAAAA,GAAW,IAAIV,MAAAA,CAAJ,WAAA,CAAuB,KAAxC,GAAiB,C;WACjB,M,CAAA,W,CAAA,Q;WACA,O,GAAA,O;;;;mCAGa;WACb,M,IAAe,KAAA,MAAA,CAAf,MAAe,E;;;;6BAGR;aACA,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,EAAP,IAAO,C;;;;CAnJLf,CAAuBC,KAAAA,CAAMC,SAA7BF,C;;;AAwJN,SAAA,WAAA,CAAA,OAAA,EAA8B;SACrBU,OAAAA,YAAAA,gBAAAA,IAAuCA,OAAAA,CAAAA,IAAAA,KAA9C,M;;;AAGF,SAAA,SAAA,CAAA,OAAA,EAA4B;MACtBgB,OAAAA,GAAUhB,OAAAA,CAAAA,OAAAA,CAAd,WAAcA,E;MACVgB,OAAAA,KAAJ,U,EAA4B,OAAA,IAAA;MACxBA,OAAAA,KAAJ,O,EAAyB,OAAA,IAAA;SAEzB,K","sourcesContent":["import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nclass MouseParticles extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ease = 0.7;\n    this.level = 0;\n    this.LEVEL = 5;\n    this._allowEmitting = true;\n    this.renderProton = this.renderProton.bind(this);\n    this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    this.mouseDownHandler = this.mouseDownHandler.bind(this);\n    this.mouseUpHandler = this.mouseUpHandler.bind(this);\n\n    this.createContainerDom();\n  }\n\n  createContainerDom() {\n    this.dom = document.createElement(\"div\");\n    this.dom.style.position = \"fixed\";\n    this.dom.style.left = \"0px\";\n    this.dom.style.top = \"0px\";\n    this.dom.style.zIndex = 9999;\n    this.dom.pointerEvents = \"none\";\n    this.dom.id = `rmps_${(Math.random() * 999999) >> 0}`;\n    document.body.appendChild(this.dom);\n  }\n\n  componentWillUnmount() {\n    try {\n      document.body.removeEventListener(\"mousemove\", this.mouseMoveHandler, false);\n      document.body.removeEventListener(\"mousedown\", this.mouseDownHandler, false);\n      document.body.removeEventListener(\"mouseup\", this.mouseUpHandler, false);\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  componentDidMount() {\n    this.onCanvasInited();\n    this.addMouseEventListener();\n    this.setCullList();\n  }\n\n  onCanvasInited() {\n    this.createProton();\n    RAFManager.add(this.renderProton);\n  }\n\n  addMouseEventListener() {\n    document.body.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\n    document.body.addEventListener(\"mousedown\", this.mouseDownHandler, false);\n    document.body.addEventListener(\"mouseup\", this.mouseUpHandler, false);\n  }\n\n  mouseDownHandler(e) {}\n  mouseUpHandler(e) {}\n\n  mouseMoveHandler(e) {\n    if (this.isCullDom(e)) return;\n    let x,\n      y = 0;\n\n    x = e.clientX;\n    y = e.clientY;\n\n    this.emitter.p.x += (x - this.emitter.p.x) * this.ease;\n    this.emitter.p.y += (y - this.emitter.p.y) * this.ease;\n\n    if (this._allowEmitting) this.emitter.emit(\"once\");\n  }\n\n  setCullList() {\n    this.cullClassList = this.props.cull || \"\";\n    this.cullClassList = this.cullClassList.split(\",\");\n\n    this.LEVEL = this.props.level || 6;\n  }\n\n  isCullDom(e) {\n    this.level = 0;\n    \n    if (isInputText(e.target)) return true;\n    if (isTextBox(e.target)) return true;\n    if (!this.cullClassList || !this.cullClassList.length) return false;\n\n    return this.isContain(e.target, this.cullClassList);\n  }\n\n  isContain(element, cullClassList) {\n    if (this.level >= this.LEVEL) return false;\n    if (!element) return false;\n    if (!element.classList) return false;\n    if (element === document.body) return false;\n\n    for (let i = 0; i < cullClassList.length; i++) {\n      if (element.classList.contains(cullClassList[i])) {\n        return true;\n      }\n    }\n    this.level++;\n\n    return this.isContain(element.parentNode, cullClassList);\n  }\n\n  createProton(canvas) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(this.props.num || 3);\n    emitter.damping = 0.008;\n\n    const life = this.props.life ? new Proton.Life(this.props.life) : new Proton.Life(0.2, 0.5);\n    const color = this.props.color || \"random\";\n    const g = this.props.g;\n    const v = this.props.v || 0.65;\n    const alpha = this.props.alpha || Proton.getSpan(0.25, 0.55);\n    const tha = this.props.tha ? new Proton.Span(this.props.tha[0], this.props.tha[1]) : new Proton.Span(0, 360);\n    let radius = new Proton.Radius(2, 5);\n    if (this.props.radius) {\n      const r = this.props.radius;\n      radius = new Proton.Radius(r * 0.8, r);\n    }\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(radius);\n    emitter.addInitialize(life);\n    emitter.addInitialize(new Proton.Velocity(new Proton.Span(v), tha, \"polar\"));\n\n    emitter.addBehaviour(new Proton.Alpha(alpha));\n    emitter.addBehaviour(new Proton.Color(color));\n    emitter.addBehaviour(new Proton.Scale(1, 0.1));\n    emitter.addBehaviour(new Proton.RandomDrift(10, 10, 0.2));\n    if (g) {\n      emitter.addBehaviour(new Proton.G(parseFloat(g)));\n    }\n\n    this.proton.addEmitter(emitter);\n    const renderer = new Proton.DomRenderer(this.dom);\n    this.proton.addRenderer(renderer);\n    this.emitter = emitter;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return <React.Fragment />;\n  }\n}\n\n// utils function\nfunction isInputText(element) {\n  return element instanceof HTMLInputElement && element.type === \"text\";\n}\n\nfunction isTextBox(element) {\n  let tagName = element.tagName.toLowerCase();\n  if (tagName === \"textarea\") return true;\n  if (tagName === \"input\") return true;\n\n  return false;\n}\n\nexport default MouseParticles;\n"]},"metadata":{},"sourceType":"module"}