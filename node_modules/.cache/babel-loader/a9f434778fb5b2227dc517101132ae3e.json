{"ast":null,"code":"var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'mai puțin de o secundă',\n    other: 'mai puțin de {{count}} secunde'\n  },\n  xSeconds: {\n    one: '1 secundă',\n    other: '{{count}} secunde'\n  },\n  halfAMinute: 'jumătate de minut',\n  lessThanXMinutes: {\n    one: 'mai puțin de un minut',\n    other: 'mai puțin de {{count}} minute'\n  },\n  xMinutes: {\n    one: '1 minut',\n    other: '{{count}} minute'\n  },\n  aboutXHours: {\n    one: 'circa 1 oră',\n    other: 'circa {{count}} ore'\n  },\n  xHours: {\n    one: '1 oră',\n    other: '{{count}} ore'\n  },\n  xDays: {\n    one: '1 zi',\n    other: '{{count}} zile'\n  },\n  aboutXMonths: {\n    one: 'circa 1 lună',\n    other: 'circa {{count}} luni'\n  },\n  xMonths: {\n    one: '1 lună',\n    other: '{{count}} luni'\n  },\n  aboutXYears: {\n    one: 'circa 1 an',\n    other: 'circa {{count}} ani'\n  },\n  xYears: {\n    one: '1 an',\n    other: '{{count}} ani'\n  },\n  overXYears: {\n    one: 'peste 1 an',\n    other: 'peste {{count}} ani'\n  },\n  almostXYears: {\n    one: 'aproape 1 an',\n    other: 'aproape {{count}} ani'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'în ' + result;\n    } else {\n      return result + ' în urmă';\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/home/shady_22/Desktop/football/node_modules/date-fns/esm/locale/ro/_lib/formatDistance/index.js"],"names":["formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","options","result","replace","addSuffix","comparison"],"mappings":"AAAA,IAAIA,oBAAoB,GAAG;AACzBC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,GAAG,EAAE,wBADW;AAEhBC,IAAAA,KAAK,EAAE;AAFS,GADO;AAKzBC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,GAAG,EAAE,WADG;AAERC,IAAAA,KAAK,EAAE;AAFC,GALe;AASzBE,EAAAA,WAAW,EAAE,mBATY;AAUzBC,EAAAA,gBAAgB,EAAE;AAChBJ,IAAAA,GAAG,EAAE,uBADW;AAEhBC,IAAAA,KAAK,EAAE;AAFS,GAVO;AAczBI,EAAAA,QAAQ,EAAE;AACRL,IAAAA,GAAG,EAAE,SADG;AAERC,IAAAA,KAAK,EAAE;AAFC,GAde;AAkBzBK,EAAAA,WAAW,EAAE;AACXN,IAAAA,GAAG,EAAE,aADM;AAEXC,IAAAA,KAAK,EAAE;AAFI,GAlBY;AAsBzBM,EAAAA,MAAM,EAAE;AACNP,IAAAA,GAAG,EAAE,OADC;AAENC,IAAAA,KAAK,EAAE;AAFD,GAtBiB;AA0BzBO,EAAAA,KAAK,EAAE;AACLR,IAAAA,GAAG,EAAE,MADA;AAELC,IAAAA,KAAK,EAAE;AAFF,GA1BkB;AA8BzBQ,EAAAA,YAAY,EAAE;AACZT,IAAAA,GAAG,EAAE,cADO;AAEZC,IAAAA,KAAK,EAAE;AAFK,GA9BW;AAkCzBS,EAAAA,OAAO,EAAE;AACPV,IAAAA,GAAG,EAAE,QADE;AAEPC,IAAAA,KAAK,EAAE;AAFA,GAlCgB;AAsCzBU,EAAAA,WAAW,EAAE;AACXX,IAAAA,GAAG,EAAE,YADM;AAEXC,IAAAA,KAAK,EAAE;AAFI,GAtCY;AA0CzBW,EAAAA,MAAM,EAAE;AACNZ,IAAAA,GAAG,EAAE,MADC;AAENC,IAAAA,KAAK,EAAE;AAFD,GA1CiB;AA8CzBY,EAAAA,UAAU,EAAE;AACVb,IAAAA,GAAG,EAAE,YADK;AAEVC,IAAAA,KAAK,EAAE;AAFG,GA9Ca;AAkDzBa,EAAAA,YAAY,EAAE;AACZd,IAAAA,GAAG,EAAE,cADO;AAEZC,IAAAA,KAAK,EAAE;AAFK;AAlDW,CAA3B;AAuDA,eAAe,SAASc,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,OAAtC,EAA+C;AAC5DA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIC,MAAJ;;AAEA,MAAI,OAAOrB,oBAAoB,CAACkB,KAAD,CAA3B,KAAuC,QAA3C,EAAqD;AACnDG,IAAAA,MAAM,GAAGrB,oBAAoB,CAACkB,KAAD,CAA7B;AACD,GAFD,MAEO,IAAIC,KAAK,KAAK,CAAd,EAAiB;AACtBE,IAAAA,MAAM,GAAGrB,oBAAoB,CAACkB,KAAD,CAApB,CAA4BhB,GAArC;AACD,GAFM,MAEA;AACLmB,IAAAA,MAAM,GAAGrB,oBAAoB,CAACkB,KAAD,CAApB,CAA4Bf,KAA5B,CAAkCmB,OAAlC,CAA0C,WAA1C,EAAuDH,KAAvD,CAAT;AACD;;AAED,MAAIC,OAAO,CAACG,SAAZ,EAAuB;AACrB,QAAIH,OAAO,CAACI,UAAR,GAAqB,CAAzB,EAA4B;AAC1B,aAAO,QAAQH,MAAf;AACD,KAFD,MAEO;AACL,aAAOA,MAAM,GAAG,UAAhB;AACD;AACF;;AAED,SAAOA,MAAP;AACD","sourcesContent":["var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'mai puțin de o secundă',\n    other: 'mai puțin de {{count}} secunde'\n  },\n  xSeconds: {\n    one: '1 secundă',\n    other: '{{count}} secunde'\n  },\n  halfAMinute: 'jumătate de minut',\n  lessThanXMinutes: {\n    one: 'mai puțin de un minut',\n    other: 'mai puțin de {{count}} minute'\n  },\n  xMinutes: {\n    one: '1 minut',\n    other: '{{count}} minute'\n  },\n  aboutXHours: {\n    one: 'circa 1 oră',\n    other: 'circa {{count}} ore'\n  },\n  xHours: {\n    one: '1 oră',\n    other: '{{count}} ore'\n  },\n  xDays: {\n    one: '1 zi',\n    other: '{{count}} zile'\n  },\n  aboutXMonths: {\n    one: 'circa 1 lună',\n    other: 'circa {{count}} luni'\n  },\n  xMonths: {\n    one: '1 lună',\n    other: '{{count}} luni'\n  },\n  aboutXYears: {\n    one: 'circa 1 an',\n    other: 'circa {{count}} ani'\n  },\n  xYears: {\n    one: '1 an',\n    other: '{{count}} ani'\n  },\n  overXYears: {\n    one: 'peste 1 an',\n    other: 'peste {{count}} ani'\n  },\n  almostXYears: {\n    one: 'aproape 1 an',\n    other: 'aproape {{count}} ani'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'în ' + result;\n    } else {\n      return result + ' în urmă';\n    }\n  }\n\n  return result;\n}"]},"metadata":{},"sourceType":"module"}