{"ast":null,"code":"function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', count); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', count); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', count);\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'праз ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' таму';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за секунду',\n      singularNominative: 'менш за {{count}} секунду',\n      singularGenitive: 'менш за {{count}} секунды',\n      pluralGenitive: 'менш за {{count}} секунд'\n    },\n    future: {\n      one: 'менш, чым праз секунду',\n      singularNominative: 'менш, чым праз {{count}} секунду',\n      singularGenitive: 'менш, чым праз {{count}} секунды',\n      pluralGenitive: 'менш, чым праз {{count}} секунд'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунда',\n      singularGenitive: '{{count}} секунды',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунду таму',\n      singularGenitive: '{{count}} секунды таму',\n      pluralGenitive: '{{count}} секунд таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} секунду',\n      singularGenitive: 'праз {{count}} секунды',\n      pluralGenitive: 'праз {{count}} секунд'\n    }\n  }),\n  halfAMinute: function (_, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'праз паўхвіліны';\n      } else {\n        return 'паўхвіліны таму';\n      }\n    }\n\n    return 'паўхвіліны';\n  },\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за хвіліну',\n      singularNominative: 'менш за {{count}} хвіліну',\n      singularGenitive: 'менш за {{count}} хвіліны',\n      pluralGenitive: 'менш за {{count}} хвілін'\n    },\n    future: {\n      one: 'менш, чым праз хвіліну',\n      singularNominative: 'менш, чым праз {{count}} хвіліну',\n      singularGenitive: 'менш, чым праз {{count}} хвіліны',\n      pluralGenitive: 'менш, чым праз {{count}} хвілін'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} хвіліна',\n      singularGenitive: '{{count}} хвіліны',\n      pluralGenitive: '{{count}} хвілін'\n    },\n    past: {\n      singularNominative: '{{count}} хвіліну таму',\n      singularGenitive: '{{count}} хвіліны таму',\n      pluralGenitive: '{{count}} хвілін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} хвіліну',\n      singularGenitive: 'праз {{count}} хвіліны',\n      pluralGenitive: 'праз {{count}} хвілін'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} гадзіны',\n      singularGenitive: 'каля {{count}} гадзін',\n      pluralGenitive: 'каля {{count}} гадзін'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} гадзіну',\n      singularGenitive: 'прыблізна праз {{count}} гадзіны',\n      pluralGenitive: 'прыблізна праз {{count}} гадзін'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} гадзіна',\n      singularGenitive: '{{count}} гадзіны',\n      pluralGenitive: '{{count}} гадзін'\n    },\n    past: {\n      singularNominative: '{{count}} гадзіну таму',\n      singularGenitive: '{{count}} гадзіны таму',\n      pluralGenitive: '{{count}} гадзін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} гадзіну',\n      singularGenitive: 'праз {{count}} гадзіны',\n      pluralGenitive: 'праз {{count}} гадзін'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} дзень',\n      singularGenitive: '{{count}} дні',\n      pluralGenitive: '{{count}} дзён'\n    }\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      singularGenitive: 'каля {{count}} месяцаў',\n      pluralGenitive: 'каля {{count}} месяцаў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} года',\n      singularGenitive: 'каля {{count}} гадоў',\n      pluralGenitive: 'каля {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} год',\n      singularGenitive: 'прыблізна праз {{count}} гады',\n      pluralGenitive: 'прыблізна праз {{count}} гадоў'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} год',\n      singularGenitive: '{{count}} гады',\n      pluralGenitive: '{{count}} гадоў'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'больш за {{count}} год',\n      singularGenitive: 'больш за {{count}} гады',\n      pluralGenitive: 'больш за {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'больш, чым праз {{count}} год',\n      singularGenitive: 'больш, чым праз {{count}} гады',\n      pluralGenitive: 'больш, чым праз {{count}} гадоў'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'амаль {{count}} год',\n      singularGenitive: 'амаль {{count}} гады',\n      pluralGenitive: 'амаль {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'амаль праз {{count}} год',\n      singularGenitive: 'амаль праз {{count}} гады',\n      pluralGenitive: 'амаль праз {{count}} гадоў'\n    }\n  })\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n}","map":{"version":3,"sources":["/home/shady_22/Desktop/football/node_modules/date-fns/esm/locale/be/_lib/formatDistance/index.js"],"names":["declension","scheme","count","one","undefined","rem10","rem100","singularNominative","replace","singularGenitive","pluralGenitive","buildLocalizeTokenFn","options","addSuffix","comparison","future","regular","past","formatDistanceLocale","lessThanXSeconds","xSeconds","halfAMinute","_","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token"],"mappings":"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","sourcesContent":["function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', count); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', count); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', count);\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'праз ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' таму';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за секунду',\n      singularNominative: 'менш за {{count}} секунду',\n      singularGenitive: 'менш за {{count}} секунды',\n      pluralGenitive: 'менш за {{count}} секунд'\n    },\n    future: {\n      one: 'менш, чым праз секунду',\n      singularNominative: 'менш, чым праз {{count}} секунду',\n      singularGenitive: 'менш, чым праз {{count}} секунды',\n      pluralGenitive: 'менш, чым праз {{count}} секунд'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунда',\n      singularGenitive: '{{count}} секунды',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунду таму',\n      singularGenitive: '{{count}} секунды таму',\n      pluralGenitive: '{{count}} секунд таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} секунду',\n      singularGenitive: 'праз {{count}} секунды',\n      pluralGenitive: 'праз {{count}} секунд'\n    }\n  }),\n  halfAMinute: function (_, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'праз паўхвіліны';\n      } else {\n        return 'паўхвіліны таму';\n      }\n    }\n\n    return 'паўхвіліны';\n  },\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за хвіліну',\n      singularNominative: 'менш за {{count}} хвіліну',\n      singularGenitive: 'менш за {{count}} хвіліны',\n      pluralGenitive: 'менш за {{count}} хвілін'\n    },\n    future: {\n      one: 'менш, чым праз хвіліну',\n      singularNominative: 'менш, чым праз {{count}} хвіліну',\n      singularGenitive: 'менш, чым праз {{count}} хвіліны',\n      pluralGenitive: 'менш, чым праз {{count}} хвілін'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} хвіліна',\n      singularGenitive: '{{count}} хвіліны',\n      pluralGenitive: '{{count}} хвілін'\n    },\n    past: {\n      singularNominative: '{{count}} хвіліну таму',\n      singularGenitive: '{{count}} хвіліны таму',\n      pluralGenitive: '{{count}} хвілін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} хвіліну',\n      singularGenitive: 'праз {{count}} хвіліны',\n      pluralGenitive: 'праз {{count}} хвілін'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} гадзіны',\n      singularGenitive: 'каля {{count}} гадзін',\n      pluralGenitive: 'каля {{count}} гадзін'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} гадзіну',\n      singularGenitive: 'прыблізна праз {{count}} гадзіны',\n      pluralGenitive: 'прыблізна праз {{count}} гадзін'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} гадзіна',\n      singularGenitive: '{{count}} гадзіны',\n      pluralGenitive: '{{count}} гадзін'\n    },\n    past: {\n      singularNominative: '{{count}} гадзіну таму',\n      singularGenitive: '{{count}} гадзіны таму',\n      pluralGenitive: '{{count}} гадзін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} гадзіну',\n      singularGenitive: 'праз {{count}} гадзіны',\n      pluralGenitive: 'праз {{count}} гадзін'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} дзень',\n      singularGenitive: '{{count}} дні',\n      pluralGenitive: '{{count}} дзён'\n    }\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      singularGenitive: 'каля {{count}} месяцаў',\n      pluralGenitive: 'каля {{count}} месяцаў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} года',\n      singularGenitive: 'каля {{count}} гадоў',\n      pluralGenitive: 'каля {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} год',\n      singularGenitive: 'прыблізна праз {{count}} гады',\n      pluralGenitive: 'прыблізна праз {{count}} гадоў'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} год',\n      singularGenitive: '{{count}} гады',\n      pluralGenitive: '{{count}} гадоў'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'больш за {{count}} год',\n      singularGenitive: 'больш за {{count}} гады',\n      pluralGenitive: 'больш за {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'больш, чым праз {{count}} год',\n      singularGenitive: 'больш, чым праз {{count}} гады',\n      pluralGenitive: 'больш, чым праз {{count}} гадоў'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'амаль {{count}} год',\n      singularGenitive: 'амаль {{count}} гады',\n      pluralGenitive: 'амаль {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'амаль праз {{count}} год',\n      singularGenitive: 'амаль праз {{count}} гады',\n      pluralGenitive: 'амаль праз {{count}} гадоў'\n    }\n  })\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n}"]},"metadata":{},"sourceType":"module"}